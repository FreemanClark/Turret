


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             mycode, CODE, READONLY
    2 00000000                 EXPORT           __main
    3 00000000                 EXTERN           bearing[SIZE=4]
    4 00000000                 ALIGN
    5 00000000                 ENTRY
    6 00000000         __main  PROC
    7 00000000         ;       //* Step C0 C1 C2 C3
    8 00000000         ;// *    1       1  0  1  0
    9 00000000         ;// *    2       0  1  1  0
   10 00000000         ;// *    3       0  1  0  1
   11 00000000         ;// *    4       1  0  0  1
   12 00000000         
   13 00000000 4829            LDR              R0, =0x2009C040 ;FIO2DIR
   14 00000002 492A            LDR              R1, =0x2009C054 ;FIO2PIN
   15 00000004 4B2A            LDR              R3, =0x2009C034 ;R3 is the addr
                                                            ess for FIO1PIN
   16 00000006         
   17 00000006 F04F 023C       mov              R2, #0x3C
   18 0000000A         
   19 0000000A 6002            str              R2, [R0]
   20 0000000C         
   21 0000000C         ;While 1.24 is on, register will be loaded to ___, and t
                       hen we step through each step until it goes back to orig
                       inal val
   22 0000000C         
   23 0000000C         
   24 0000000C 681A    loop    LDR              R2, [R3]    ; R2 is the value o
                                                            f FIO1PIN (shows if
                                                             pins are on or off
                                                            )
   25 0000000E         
   26 0000000E         ; TODO: Determine if you should jump to up, down, left, 
                       or right
   27 0000000E         ; based on the value in R2
   28 0000000E         
   29 0000000E F412 0F00       tst              r2, #0x00800000
   30 00000012 D009            BEQ              up
   31 00000014         
   32 00000014 F012 7F00       tst              r2, #0x02000000
   33 00000018 D006            BEQ              down
   34 0000001A         
   35 0000001A F012 6F80       tst              r2, #0x04000000 ;hex value that
                                                             is a 1 for 26
   36 0000001E D020            BEQ              left
   37 00000020         
   38 00000020 F012 7F80       tst              r2, #0x01000000 ;hex value that
                                                             is a 1 for 24
   39 00000024 D000            BEQ              right
   40 00000026         
   41 00000026 E7F1            B                loop        ; change to endofpr
                                                            oc when not main fx
                                                            n
   42 00000028         ;B endofproc
   43 00000028         up                                   ; TODO: Increment R
                                                            0 and jump to wait
   44 00000028         
   45 00000028         
   46 00000028         down                                 ; TODO: Decrement R
                                                            0 and jump to wait



ARM Macro Assembler    Page 2 


   47 00000028         
   48 00000028         
   49 00000028         right
   50 00000028         ;set a 1 to 2.2 and 2.5
   51 00000028 F04F 0218       mov              R2, #0x18
   52 0000002C 600A            str              R2, [R1]
   53 0000002E         ;store location of pos
   54 0000002E         ;LDR R6, =bearing
   55 0000002E         ;MOV R7, #60 ;stores degree pos in R7
   56 0000002E         ;STR R7, [R6]
   57 0000002E F7FF FFFE       BL               waitHundredms
   58 00000032         
   59 00000032         
   60 00000032         ;set a 1 to 2.3 and 2.5
   61 00000032 F04F 020C       mov              R2, #0x0C
   62 00000036 600A            str              R2, [R1]
   63 00000038         ;store location of pos
   64 00000038         ;  LDR R6, =bearing
   65 00000038         ;  MOV R7, #45 ;stores degree pos in R7
   66 00000038         ;  STR R7, [R6]
   67 00000038 F7FF FFFE       BL               waitHundredms
   68 0000003C         
   69 0000003C         ;set a 1 to 2.3 and 2.4
   70 0000003C F04F 0224       mov              R2, #0x24
   71 00000040 600A            str              R2, [R1]
   72 00000042         ;store location of pos
   73 00000042         ;  LDR R6, =bearing
   74 00000042         ;  MOV R7, #30 ;stores degree pos in R7
   75 00000042         ;  ;STR R7, [R6]
   76 00000042 F7FF FFFE       BL               waitHundredms
   77 00000046         
   78 00000046         ;Set a 1 to 2.2 and 2.4
   79 00000046 F04F 0230       mov              R2, #0x30
   80 0000004A 600A            str              R2, [R1]
   81 0000004C         ;store location of pos
   82 0000004C F8DF C064       LDR              R12, =bearing
   83 00000050 F8DC 2000       LDR              R2, [R12]
   84 00000054 F102 0201       ADD              R2, #1      ;stores degree pos 
                                                            in R7
   85 00000058 F8CC 2000       STR              R2, [R12]
   86 0000005C F7FF FFFE       BL               waitHundredms
   87 00000060 E7D4            B                loop
   88 00000062         
   89 00000062         
   90 00000062         
   91 00000062         left
   92 00000062         ;Set a 1 to 2.2 and 2.4
   93 00000062 F04F 0230       mov              R2, #0x30
   94 00000066 600A            str              R2, [R1]
   95 00000068         ;store location of pos
   96 00000068         ;LDR R6, =bearing
   97 00000068 F04F 070F       MOV              R7, #15     ;stores degree pos 
                                                            in R7
   98 0000006C         ;STR R7, [R6]
   99 0000006C F7FF FFFE       BL               waitHundredms
  100 00000070         
  101 00000070         ;set a 1 to 2.3 and 2.4
  102 00000070 F04F 0224       mov              R2, #0x24
  103 00000074 600A            str              R2, [R1]



ARM Macro Assembler    Page 3 


  104 00000076         ;store location of pos
  105 00000076         ;LDR R6, =bearing
  106 00000076 F04F 071E       MOV              R7, #30     ;stores degree pos 
                                                            in R7
  107 0000007A         ;STR R7, [R6]
  108 0000007A F7FF FFFE       BL               waitHundredms
  109 0000007E         
  110 0000007E         ;set a 1 to 2.3 and 2.5
  111 0000007E F04F 020C       mov              R2, #0x0C
  112 00000082 600A            str              R2, [R1]
  113 00000084         ;store location of pos
  114 00000084         ;LDR R6, =bearing
  115 00000084 F04F 072D       MOV              R7, #45     ;stores degree pos 
                                                            in R7
  116 00000088         ;STR R7, [R6]
  117 00000088 F7FF FFFE       BL               waitHundredms
  118 0000008C         
  119 0000008C         ;set a 1 to 2.2 and 2.5
  120 0000008C F04F 0218       mov              R2, #0x18
  121 00000090 600A            str              R2, [R1]
  122 00000092         ;store location of pos
  123 00000092         ;LDR R6, =bearing
  124 00000092 F04F 073C       MOV              R7, #60     ;stores degree pos 
                                                            in R7
  125 00000096         ;STR R7, [R6]
  126 00000096 F7FF FFFE       BL               waitHundredms
  127 0000009A E7B7            B                loop
  128 0000009C         endofproc
  129 0000009C                 ENDP
  130 0000009C         
  131 0000009C                 EXPORT           waitHundredms
  132 0000009C         waitHundredms
                               PROC
  133 0000009C         ; TODO: Write a procedure that "waits" for 100ms by wast
                       ing cycles
  134 0000009C         ; See Lesson 9 on cycle counting and Reference D from th
                       e website
  135 0000009C         ;     ldr R0, =333333
  136 0000009C         ;  ldr R0, =166667
  137 0000009C         ;  ldr R0, =83333
  138 0000009C 4806            ldr              r0, =70000
  139 0000009E         loop1
  140 0000009E F1A0 0001       SUB              R0, #1
  141 000000A2 2800            CMP              R0, #0
  142 000000A4 D1FB            BNE              loop1
  143 000000A6         
  144 000000A6 4770            BX               LR
  145 000000A8                 ENDP
  146 000000A8                 END
              2009C040 
              2009C054 
              2009C034 
              00000000 
              00011170 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M3 --depe
nd=.\flash\fixed.d -o.\flash\fixed.o -I.\RTE\Device\LPC1768 -I.\RTE\_LPC1768_Fl
ash -IC:\Users\m241896\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Inclu
de -IC:\Users\m241896\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Driver\Incl
ude -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Boards\Ke



ARM Macro Assembler    Page 4 


il\MCB1700\Common -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2
.7.1\Device\Include -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\LPC1700_DFP
\2.7.1\RTE_Driver -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\MDK-Middlewar
e\7.16.0\Board --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --pr
edefine="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predefine="LP
C175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\flash\fixed.lst fixed.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 6 in file fixed.s
   Uses
      At line 2 in file fixed.s
Comment: __main used once
down 00000028

Symbol: down
   Definitions
      At line 46 in file fixed.s
   Uses
      At line 33 in file fixed.s
Comment: down used once
endofproc 0000009C

Symbol: endofproc
   Definitions
      At line 128 in file fixed.s
   Uses
      None
Comment: endofproc unused
left 00000062

Symbol: left
   Definitions
      At line 91 in file fixed.s
   Uses
      At line 36 in file fixed.s
Comment: left used once
loop 0000000C

Symbol: loop
   Definitions
      At line 24 in file fixed.s
   Uses
      At line 41 in file fixed.s
      At line 87 in file fixed.s
      At line 127 in file fixed.s

loop1 0000009E

Symbol: loop1
   Definitions
      At line 139 in file fixed.s
   Uses
      At line 142 in file fixed.s
Comment: loop1 used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 1 in file fixed.s
   Uses
      None
Comment: mycode unused
right 00000028



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: right
   Definitions
      At line 49 in file fixed.s
   Uses
      At line 39 in file fixed.s
Comment: right used once
up 00000028

Symbol: up
   Definitions
      At line 43 in file fixed.s
   Uses
      At line 30 in file fixed.s
Comment: up used once
waitHundredms 0000009C

Symbol: waitHundredms
   Definitions
      At line 132 in file fixed.s
   Uses
      At line 57 in file fixed.s
      At line 67 in file fixed.s
      At line 76 in file fixed.s
      At line 86 in file fixed.s
      At line 99 in file fixed.s
      At line 108 in file fixed.s
      At line 117 in file fixed.s
      At line 126 in file fixed.s
      At line 131 in file fixed.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

bearing 00000000

Symbol: bearing
   Definitions
      At line 3 in file fixed.s
   Uses
      At line 82 in file fixed.s
Comment: bearing used once
1 symbol
348 symbols in table
