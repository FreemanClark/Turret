


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             mycode, CODE, READONLY
    2 00000000                 EXPORT           update_motor
    3 00000000                 EXTERN           bearing[SIZE=4]
    4 00000000                 ALIGN
    5 00000000                 ENTRY
    6 00000000         update_motor
                               PROC
    7 00000000         ;       //* Step C0 C1 C2 C3
    8 00000000         ;// *    1       1  0  1  0
    9 00000000         ;// *    2       0  1  1  0
   10 00000000         ;// *    3       0  1  0  1
   11 00000000         ;// *    4       1  0  0  1
   12 00000000         ;setup for left/right motor
   13 00000000         
   14 00000000         ;LDR R1, =0x2009C054 ;FIO2PIN
   15 00000000 4B42            LDR              R3, =0x2009C034 ;R3 is the addr
                                                            ess for FIO1PIN
   16 00000002 4843            LDR              R0, =0x2009C014 ;FIO0PIN
   17 00000004         
   18 00000004         ;While 1.24 is on, register will be loaded to ___, and t
                       hen we step through each step until it goes back to orig
                       inal val
   19 00000004         
   20 00000004         
   21 00000004 681A    loop    LDR              R2, [R3]    ; R2 is the value o
                                                            f FIO1PIN (shows if
                                                             pins are on or off
                                                            )
   22 00000006         
   23 00000006         ; TODO: Determine if you should jump to up, down, left, 
                       or right
   24 00000006         ; based on the value in R2
   25 00000006         
   26 00000006 F412 0F00       tst              r2, #0x00800000
   27 0000000A D009            BEQ              up
   28 0000000C         
   29 0000000C F012 7F00       tst              r2, #0x02000000
   30 00000010 D024            BEQ              down
   31 00000012         
   32 00000012 F012 6F80       tst              r2, #0x04000000 ;hex value that
                                                             is a 1 for 26
   33 00000016 D055            BEQ              left
   34 00000018         
   35 00000018 F012 7F80       tst              r2, #0x01000000 ;hex value that
                                                             is a 1 for 24
   36 0000001C D034            BEQ              right
   37 0000001E         
   38 0000001E         ;B loop   ; change to endofproc when not main fxn
   39 0000001E E067            B                endofproc
   40 00000020         up                                   ; TODO: Increment R
                                                            0 and jump to wait
   41 00000020 483B            LDR              R0, =0x2009C014 ;FIO0PIN
   42 00000022         ;set a 1 to 2.2 and 2.5
   43 00000022 F04F 0218       mov              R2, #0x18
   44 00000026 600A            str              R2, [R1]
   45 00000028         ;store location of pos
   46 00000028         ;LDR R6, =bearing
   47 00000028         ;MOV R7, #60 ;stores degree pos in R7
   48 00000028         ;STR R7, [R6]



ARM Macro Assembler    Page 2 


   49 00000028 F7FF FFFE       BL               waitHundredms
   50 0000002C         
   51 0000002C         
   52 0000002C         ;set a 1 to 2.3 and 2.5
   53 0000002C F04F 020C       mov              R2, #0x0C
   54 00000030 600A            str              R2, [R1]
   55 00000032         ;store location of pos
   56 00000032         ;  LDR R6, =bearing
   57 00000032         ;  MOV R7, #45 ;stores degree pos in R7
   58 00000032         ;  STR R7, [R6]
   59 00000032 F7FF FFFE       BL               waitHundredms
   60 00000036         
   61 00000036         ;set a 1 to 2.3 and 2.4
   62 00000036 F04F 0224       mov              R2, #0x24
   63 0000003A 600A            str              R2, [R1]
   64 0000003C         ;store location of pos
   65 0000003C         ;  LDR R6, =bearing
   66 0000003C         ;  MOV R7, #30 ;stores degree pos in R7
   67 0000003C         ;  ;STR R7, [R6]
   68 0000003C F7FF FFFE       BL               waitHundredms
   69 00000040         
   70 00000040         ;Set a 1 to 2.2 and 2.4
   71 00000040 F04F 0230       mov              R2, #0x30
   72 00000044 600A            str              R2, [R1]
   73 00000046         ;store location of pos
   74 00000046 F8DF C0CC       LDR              R12, =bearing
   75 0000004A F8DC 2000       LDR              R2, [R12]
   76 0000004E F102 0201       ADD              R2, #1      ;stores degree pos 
                                                            in R7
   77 00000052 F8CC 2000       STR              R2, [R12]
   78 00000056 F7FF FFFE       BL               waitHundredms
   79 0000005A E7D3            B                loop
   80 0000005C         
   81 0000005C         down                                 ; TODO: Decrement R
                                                            0 and jump to wait
   82 0000005C 482C            LDR              R0, =0x2009C014 ;FIO0PIN
   83 0000005E         ;Set a 1 to 2.2 and 2.4
   84 0000005E F04F 0230       mov              R2, #0x30
   85 00000062 600A            str              R2, [R1]
   86 00000064         ;store location of pos
   87 00000064         ;LDR R6, =bearing
   88 00000064         ;MOV R7, #15 ;stores degree pos in R7
   89 00000064         ;STR R7, [R6]
   90 00000064 F7FF FFFE       BL               waitHundredms
   91 00000068         
   92 00000068         ;set a 1 to 2.3 and 2.4
   93 00000068 F04F 0224       mov              R2, #0x24
   94 0000006C 600A            str              R2, [R1]
   95 0000006E         ;store location of pos
   96 0000006E         ;LDR R6, =bearing
   97 0000006E         ;MOV R7, #30 ;stores degree pos in R7
   98 0000006E         ;STR R7, [R6]
   99 0000006E F7FF FFFE       BL               waitHundredms
  100 00000072         
  101 00000072         ;set a 1 to 2.3 and 2.5
  102 00000072 F04F 020C       mov              R2, #0x0C
  103 00000076 600A            str              R2, [R1]
  104 00000078         ;store location of pos
  105 00000078         ;LDR R6, =bearing



ARM Macro Assembler    Page 3 


  106 00000078         ;MOV R7, #45 ;stores degree pos in R7
  107 00000078         ;STR R7, [R6]
  108 00000078 F7FF FFFE       BL               waitHundredms
  109 0000007C         
  110 0000007C         ;set a 1 to 2.2 and 2.5
  111 0000007C F04F 0218       mov              R2, #0x18
  112 00000080 600A            str              R2, [R1]
  113 00000082         ;store location of pos
  114 00000082         ;LDR R6, =bearing
  115 00000082         ;MOV R7, #60 ;stores degree pos in R7
  116 00000082         ;STR R7, [R6]
  117 00000082 F7FF FFFE       BL               waitHundredms
  118 00000086 E7BD            B                loop
  119 00000088         
  120 00000088         right
  121 00000088 4923            LDR              R1, =0x2009C054 ;FIO2PIN
  122 0000008A         ;set a 1 to 2.2 and 2.5
  123 0000008A F04F 0218       mov              R2, #0x18
  124 0000008E 600A            str              R2, [R1]
  125 00000090         ;store location of pos
  126 00000090         ;LDR R6, =bearing
  127 00000090         ;MOV R7, #60 ;stores degree pos in R7
  128 00000090         ;STR R7, [R6]
  129 00000090 F7FF FFFE       BL               waitHundredms
  130 00000094         
  131 00000094         
  132 00000094         ;set a 1 to 2.3 and 2.5
  133 00000094 F04F 020C       mov              R2, #0x0C
  134 00000098 600A            str              R2, [R1]
  135 0000009A         ;store location of pos
  136 0000009A         ;  LDR R6, =bearing
  137 0000009A         ;  MOV R7, #45 ;stores degree pos in R7
  138 0000009A         ;  STR R7, [R6]
  139 0000009A F7FF FFFE       BL               waitHundredms
  140 0000009E         
  141 0000009E         ;set a 1 to 2.3 and 2.4
  142 0000009E F04F 0224       mov              R2, #0x24
  143 000000A2 600A            str              R2, [R1]
  144 000000A4         ;store location of pos
  145 000000A4         ;  LDR R6, =bearing
  146 000000A4         ;  MOV R7, #30 ;stores degree pos in R7
  147 000000A4         ;  ;STR R7, [R6]
  148 000000A4 F7FF FFFE       BL               waitHundredms
  149 000000A8         
  150 000000A8         ;Set a 1 to 2.2 and 2.4
  151 000000A8 F04F 0230       mov              R2, #0x30
  152 000000AC 600A            str              R2, [R1]
  153 000000AE         ;store location of pos
  154 000000AE F8DF C064       LDR              R12, =bearing
  155 000000B2 F8DC 2000       LDR              R2, [R12]
  156 000000B6 F102 0201       ADD              R2, #1      ;stores degree pos 
                                                            in R7
  157 000000BA F8CC 2000       STR              R2, [R12]
  158 000000BE F7FF FFFE       BL               waitHundredms
  159 000000C2 E79F            B                loop
  160 000000C4         
  161 000000C4         
  162 000000C4         
  163 000000C4         left



ARM Macro Assembler    Page 4 


  164 000000C4 4914            LDR              R1, =0x2009C054 ;FIO2PIN
  165 000000C6         ;Set a 1 to 2.2 and 2.4
  166 000000C6 F04F 0230       mov              R2, #0x30
  167 000000CA 600A            str              R2, [R1]
  168 000000CC         ;store location of pos
  169 000000CC         ;LDR R6, =bearing
  170 000000CC         ;MOV R7, #15 ;stores degree pos in R7
  171 000000CC         ;STR R7, [R6]
  172 000000CC F7FF FFFE       BL               waitHundredms
  173 000000D0         
  174 000000D0         ;set a 1 to 2.3 and 2.4
  175 000000D0 F04F 0224       mov              R2, #0x24
  176 000000D4 600A            str              R2, [R1]
  177 000000D6         ;store location of pos
  178 000000D6         ;LDR R6, =bearing
  179 000000D6         ;MOV R7, #30 ;stores degree pos in R7
  180 000000D6         ;STR R7, [R6]
  181 000000D6 F7FF FFFE       BL               waitHundredms
  182 000000DA         
  183 000000DA         ;set a 1 to 2.3 and 2.5
  184 000000DA F04F 020C       mov              R2, #0x0C
  185 000000DE 600A            str              R2, [R1]
  186 000000E0         ;store location of pos
  187 000000E0         ;LDR R6, =bearing
  188 000000E0         ;MOV R7, #45 ;stores degree pos in R7
  189 000000E0         ;STR R7, [R6]
  190 000000E0 F7FF FFFE       BL               waitHundredms
  191 000000E4         
  192 000000E4         ;set a 1 to 2.2 and 2.5
  193 000000E4 F04F 0218       mov              R2, #0x18
  194 000000E8 600A            str              R2, [R1]
  195 000000EA         ;store location of pos
  196 000000EA         ;LDR R6, =bearing
  197 000000EA         ;MOV R7, #60 ;stores degree pos in R7
  198 000000EA         ;STR R7, [R6]
  199 000000EA F7FF FFFE       BL               waitHundredms
  200 000000EE E789            B                loop
  201 000000F0         endofproc
  202 000000F0                 ENDP
  203 000000F0         
  204 000000F0                 EXPORT           waitHundredms
  205 000000F0         waitHundredms
                               PROC
  206 000000F0         ; TODO: Write a procedure that "waits" for 100ms by wast
                       ing cycles
  207 000000F0         ; See Lesson 9 on cycle counting and Reference D from th
                       e website
  208 000000F0 480A            ldr              r0, =70000
  209 000000F2         loop1
  210 000000F2 F1A0 0001       SUB              R0, #1
  211 000000F6 2800            CMP              R0, #0
  212 000000F8 D1FB            BNE              loop1
  213 000000FA         
  214 000000FA 4770            BX               LR
  215 000000FC                 ENDP
  216 000000FC         
  217 000000FC                 EXPORT           motorsetup
  218 000000FC         motorsetup
                               PROC



ARM Macro Assembler    Page 5 


  219 000000FC         ; sets 0x3C to direction registers for 0.2-5 and 2.2-5
  220 000000FC         ;setup for left/right motor
  221 000000FC 4808            LDR              R0, =0x2009C040 ;FIO2DIR
  222 000000FE F04F 023C       MOV              R2, #0x3C
  223 00000102 6002            STR              R2, [R0]
  224 00000104         ;setup for up/down motor
  225 00000104 4807            LDR              R0, =0x2009C000 ;FIO0DIR
  226 00000106 6002            STR              R2, [R0]
  227 00000108 4770            BX               LR
  228 0000010A                 ENDP
  229 0000010A                 END
              00 00 2009C034 
              2009C014 
              00000000 
              2009C054 
              00011170 
              2009C040 
              2009C000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M3 --depe
nd=.\flash\try.d -o.\flash\try.o -I.\RTE\Device\LPC1768 -I.\RTE\_LPC1768_Flash 
-IC:\Users\m241896\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -
IC:\Users\m241896\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Driver\Include 
-IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Boards\Keil\M
CB1700\Common -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1
\Device\Include -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7
.1\RTE_Driver -IC:\Users\m241896\AppData\Local\Arm\Packs\Keil\MDK-Middleware\7.
16.0\Board --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predef
ine="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predefine="LPC175
x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\flash\try.lst try.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

down 0000005C

Symbol: down
   Definitions
      At line 81 in file try.s
   Uses
      At line 30 in file try.s
Comment: down used once
endofproc 000000F0

Symbol: endofproc
   Definitions
      At line 201 in file try.s
   Uses
      At line 39 in file try.s
Comment: endofproc used once
left 000000C4

Symbol: left
   Definitions
      At line 163 in file try.s
   Uses
      At line 33 in file try.s
Comment: left used once
loop 00000004

Symbol: loop
   Definitions
      At line 21 in file try.s
   Uses
      At line 79 in file try.s
      At line 118 in file try.s
      At line 159 in file try.s
      At line 200 in file try.s

loop1 000000F2

Symbol: loop1
   Definitions
      At line 209 in file try.s
   Uses
      At line 212 in file try.s
Comment: loop1 used once
motorsetup 000000FC

Symbol: motorsetup
   Definitions
      At line 218 in file try.s
   Uses
      At line 217 in file try.s
Comment: motorsetup used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 1 in file try.s
   Uses
      None
Comment: mycode unused



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

right 00000088

Symbol: right
   Definitions
      At line 120 in file try.s
   Uses
      At line 36 in file try.s
Comment: right used once
up 00000020

Symbol: up
   Definitions
      At line 40 in file try.s
   Uses
      At line 27 in file try.s
Comment: up used once
update_motor 00000000

Symbol: update_motor
   Definitions
      At line 6 in file try.s
   Uses
      At line 2 in file try.s
Comment: update_motor used once
waitHundredms 000000F0

Symbol: waitHundredms
   Definitions
      At line 205 in file try.s
   Uses
      At line 49 in file try.s
      At line 59 in file try.s
      At line 68 in file try.s
      At line 78 in file try.s
      At line 90 in file try.s
      At line 99 in file try.s
      At line 108 in file try.s
      At line 117 in file try.s
      At line 129 in file try.s
      At line 139 in file try.s
      At line 148 in file try.s
      At line 158 in file try.s
      At line 172 in file try.s
      At line 181 in file try.s
      At line 190 in file try.s
      At line 199 in file try.s
      At line 204 in file try.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

bearing 00000000

Symbol: bearing
   Definitions
      At line 3 in file try.s
   Uses
      At line 74 in file try.s
      At line 154 in file try.s

1 symbol
349 symbols in table
